name: CD Build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/colorwiz:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/colorwiz:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install SSH client
        run: sudo apt-get install -y ssh

      - name: Deploy to EC2
        run: |
          # SSH into EC2 and install Docker if not installed
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          if ! command -v docker &> /dev/null
          then
              echo "Docker not installed. Installing Docker..."
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker ${{ secrets.EC2_USER }}
          else
              echo "Docker already installed."
          fi
          
          # Pull the latest image from Docker Hub
          docker pull ${{ secrets.DOCKER_USERNAME }}/colorwiz:latest

          # Stop and remove the existing container if running
          docker stop my-app || true
          docker rm my-app || true

          # Run the new container
          docker run -d --name my-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/colorwiz:latest
          EOF
        env:
          EC2_KEY: ${{ secrets.EC2_KEY }}

      - name: Transfer EC2 private key
        run: |
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
